{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xD91dE37c8a751b739E8aDcBCa78861D548772d81",
      "txHash": "0x6e7f01764fef28033837a3000f52067da68956ea5ab4d8fceb393db2fa31c7d0",
      "kind": "uups"
    },
    {
      "address": "0xe7f946e9b649c992e12662DD9dCBDC5589953f48",
      "txHash": "0x82fc440e07a0b04e0a221fbab7e883a838ace5847401dd18c661eaadac08260e",
      "kind": "uups"
    },
    {
      "address": "0xE0545d8143D8008d64bd33d9637c9a20C9e8b412",
      "txHash": "0x9f4f9a8484610b1d147deb24a4f8bc58423ac7b5a50f092f7ead06d406af0ec3",
      "kind": "uups"
    },
    {
      "address": "0xD20BB5Ab1cCc59D31C9EE05F2E96098d64f6597d",
      "txHash": "0x6a76a678f004e7cd6df2b947c3db3676d4e0414c56b0003a173f37d55aa49dd1",
      "kind": "uups"
    },
    {
      "address": "0xD6D754368A3C5Bc4Fc35cC70773Ff13857Ecc7a6",
      "txHash": "0x859493274496aa2153fc868742b8ece463f07f3dbb3d7e4bc0b4a88ccee2f6fb",
      "kind": "uups"
    },
    {
      "address": "0x7880f1e7b09320eCDC3681e8647432B14bC902f6",
      "txHash": "0x3864666c047481f211d0b66d2539ac81f0d48cf19831b067da0ae31ebf3bd1f1",
      "kind": "uups"
    },
    {
      "address": "0x578122C6A8a3ad1fa24582EFC031C9E915A1828d",
      "txHash": "0x16f8cb19b2cc8c6fcb9294ca8f8eca987e098b781c1c70cd4d59baf735171c34",
      "kind": "uups"
    },
    {
      "address": "0x1c8eDe544173d3a898409A653dd8268E5d4c3d92",
      "txHash": "0xb0ac47b0f92c2de0642d8514b939ac5d6515410ec32050929cfbf6efcf18370a",
      "kind": "uups"
    }
  ],
  "impls": {
    "288ebcd6222edee7a455dfb8a9c12b5d59178359c3bc0662886df003aaaea838": {
      "address": "0xBc9849dfDDA098Bf4dc8E23e74f99751193B2936",
      "txHash": "0xa635247b0025857d1ee4911fcc0a2ed5b1794d3125bf9ed4166509f96f406968",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "keeper",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "BeefyFeeConfigurator",
            "src": "src/infra/BeefyFeeConfigurator.sol:19"
          },
          {
            "label": "totalLimit",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "BeefyFeeConfigurator",
            "src": "src/infra/BeefyFeeConfigurator.sol:20"
          },
          {
            "label": "stratFeeId",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BeefyFeeConfigurator",
            "src": "src/infra/BeefyFeeConfigurator.sol:23"
          },
          {
            "label": "feeCategory",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(FeeCategory)1367_storage)",
            "contract": "BeefyFeeConfigurator",
            "src": "src/infra/BeefyFeeConfigurator.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(FeeCategory)1367_storage)": {
            "label": "mapping(uint256 => struct BeefyFeeConfigurator.FeeCategory)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FeeCategory)1367_storage": {
            "label": "struct BeefyFeeConfigurator.FeeCategory",
            "members": [
              {
                "label": "total",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "beefy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "call",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strategist",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "label",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1fdee81fa20e81241589020421342d67fbcc8381d7503a07fb3ec6f77e8d5bc0": {
      "address": "0xd7E071Db71c8e92fBe16De2F764536985CBD2b54",
      "txHash": "0xe70b7a764c1c2084db8104214ea86c8575fc2a69db60ca7098a35c32808a1570",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "stratCandidate",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(StratCandidate)3495_storage",
            "contract": "BeefyVaultV7",
            "src": "src/core/BeefyVaultV7.sol:27"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IStrategyV7)4129",
            "contract": "BeefyVaultV7",
            "src": "src/core/BeefyVaultV7.sol:29"
          },
          {
            "label": "approvalDelay",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "BeefyVaultV7",
            "src": "src/core/BeefyVaultV7.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)146_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)243_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IStrategyV7)4129": {
            "label": "contract IStrategyV7",
            "numberOfBytes": "20"
          },
          "t_struct(StratCandidate)3495_storage": {
            "label": "struct BeefyVaultV7.StratCandidate",
            "members": [
              {
                "label": "implementation",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proposedTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
